name: Compile and Build AZMusicDownloader

on:
  workflow_dispatch:  # 只保留手动触发器
    # 指定一个可选的输入参数，例如版本号
    inputs:
      version:
        description: '编译版本号'
        required: true
        default: '2.6.103'  # 默认版本号

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install MinGW64 and nuitka
      run: |
        choco install mingw -y
        python -m pip install --upgrade pip
        pip install Nuitka

    - name: Compile with Nuitka
      run: |
        $VERSION_NUMBER="${{ github.event.inputs.version }}"

        # Compile with Nuitka
        nuitka --standalone --windows-console-mode=disable --include-package=qfluentwidgets --include-module=qfluentwidgets --mingw64 --plugin-enable=pyqt5 --windows-icon-from-ico=icon.ico --windows-company-name="AZ Studio" --windows-product-name=AZMusicDownloader --windows-file-version=$VERSION_NUMBER --windows-product-version=$VERSION_NUMBER --windows-file-description=AZMusicDownloader MusicDownloader.py
        mkdir -p MusicDownloader.dist/resource  # 创建目标目录
        cp -r resource/. MusicDownloader.dist/resource  # 复制 resource 文件夹及其内容到目标目录

    - name: 打包和发布
      run: |
        mkdir -p output
        Compress-Archive -Path MusicDownloader.dist -DestinationPath "./output/$VERSION_NUMBER.zip"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        body: "自动生成的发布版本"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: DkbVn87cMSQpSh22VWGzmoVsapbtVavL
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/${{ github.event.inputs.version }}.zip
        asset_name: ${{ github.event.inputs.version }}.zip
        asset_content_type: application/zip
